{"id":"ejercicios/prototypal-inheritance.html","dependencies":[{"name":"D:\\Cursos Platzi\\JavaScript-Profesional\\.babelrc","includedInParent":true,"mtime":1627014060469},{"name":"D:\\Cursos Platzi\\JavaScript-Profesional\\package.json","includedInParent":true,"mtime":1627014357661}],"generated":{"html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Herencia Prototypal</title>\r\n</head>\r\n\r\n<body>\r\n    <a href=\"/ejercicios/\">Go back</a>\r\n    <p><em>Abre la consola</em></p>\r\n\r\n    <h1><code>SomeObject.prototype</code> es un objeto donde definimos el prototipo de las instancias de\r\n        <code>SomeObject</code>, Es decir, las instancias de <code>SomeObject</code> van a \"heredar\" de\r\n        <code><SomeObject class=\"prototype\"></SomeObject></code>\r\n        <br>\r\n        <code>SomeObject.[[Prototype]]</code> es el prototipo de <code>SomeObject</code>. Es decir,\r\n        <code>SomeObject</code> \"hereda\" de <code>SomeObject.prototype.</code>\r\n    </h1>\r\n\r\n    <script>function Hero(name) {\n  this.name = name;\n}\n\nHero.prototype.saludar = function () {\n  console.log(`Hola, soy ${this.name}`);\n};\n\nconst zelda = new Hero(\"Zelda\"); // Propiedades de la instancia\n\nconsole.log(\"Name:\", zelda.name); // Propiedades de la \"clase\"\n\nconsole.log(\"Saludar:\", zelda.saludar); // Propiedades heredadas ej: toString\n\nconsole.log(\"toString:\", zelda.toString); // hasOwnProperty (de d√≥nde sale toString o esto?)\n\nconsole.log('zelda.hasOwnProperty(\"name\"):', zelda.hasOwnProperty(\"name\")); // Inspeccionamos el prototipo del zelda\n// Inspeccionamos el prototipo del Hero\n//Inspeccionamos el prototipo del Object</script>\r\n</body>\r\n\r\n</html>"},"sourceMaps":null,"error":null,"hash":"3d502f44d8c5a10186330fc9daafa14a","cacheData":{"env":{}}}
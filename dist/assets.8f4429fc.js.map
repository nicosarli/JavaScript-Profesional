{"version":3,"sources":["assets/MediaPlayer.js","assets/Pluggins/AutoPlay.js","assets/Pluggins/AutoPause.js","assets/index.js"],"names":["MediaPlayer","config","media","el","plugins","_initPlugins","prototype","player","play","pause","muted","value","forEach","plugin","run","togglePlay","paused","mute","unmute","AutoPlay","AutoPause","constructor","entries","entry","isIntersecting","isVisible","document","visibilityState","threshold","observer","IntersectionObserver","handleIntersection","observe","addEventListener","handleVisibilityChange","video","querySelector","playButton","onclick","muteButton","navigator","serviceWorker","register","catch","error","console","log"],"mappings":";;AGAA;;AACA;;AACA;AHFA,ACAA,SDASA,ACAAmB,QAAT,GDAA,ACAoB,CDAClB,ACAC,MDAtB,EAA6B;AAC3B,OAAKC,KAAL,GAAaD,MAAM,CAACE,EAApB;AACA,AEFF,ADEAgB,MCFMC,CFEChB,CCAC,CAACE,KDAP,CEFF,CAAgB,CFECL,CCAjB,CAAmBa,GAAnB,CDAuB,CAACV,CCAC,MDAR,IAAkB,ACAAG,EDAjC,ICAuB,EAAkB;ACDzCc,ADEA,AECF,EDHEA,IDEI,AECAc,CFDC5B,IECI,EDHE,ADEA,CAACG,AECAgB,EDHE,GDEd,EAAmB,CECC,CAACU,aAAT,CAAuB,OAAvB,CAAd;AHAE,AEHc,ADGZ7B,AEEJ,IFFIA,EEEEA,CHFCF,GCAG,CAACK,CEEC,GAAG,CFFX,GDAF,ACAiB,AEEAV,IFFf,gBEEW,CAAgB,QDYPsB,OAAD,IAAa;AFbnC,AEcG,ADdD,AEEDnB,EAAAA,EAAE,EAAEgC,KADyB,CDarBZ,KAAK,GAAGD,OAAO,CAAC,CAAD,CAArB,CADgC,CAGhC;ACbFlB,EAAAA,OAAO,EAAE,CAAC,IAAIe,iBAAJ,EAAD,EAAiB,IAAIC,kBAAJ,EAAjB;AHDXpB,AEgBI,ADjBFO,AEA6B,CAAhB,CFAbA,AEAF,MFAQ,CAACC,CCiBDe,CFhBG,CAACjB,CCDV,ECiBW,CAACkB,KFhBd,CAAsBnB,QEgBlB,EAA0B,EFhB9B,GAAqC,YAAY;AAC/C,AEgBI,ADjBL,AEID,CFTA,KESMgC,EHHE9B,MAAM,EGGE,CHHC,EGGEmB,QAAQ,CAACU,aAAT,CAAuB,aAAvB,CAAnB;AHFI5B,AEgBE,IFhBFA,IAAI,EAAE,GEgBCD,GFhBK,GEgBV,CAAYC,CFhBGA,GEgBf,CFhBU,EADC;AAEbC,AEgBC,ACdL4B,IHFI5B,GEaA,EFbK,CGEC,CHFC,AGEA6B,EDcA,EDjBInB,EDCE,CGEjB,GAAqB,CHFCV,KAAL,AGEUF,EHJV,IGIgB,CAACQ,UAAP,EAA3B;AHDIb,AEgBE,IFhBFA,KAAK,EAAE,EEgBAK,GFhBKL,GEgBV,CAAYO,CFnBD,IEmBX;AACD,ACdL,MAAM8B,CDI8B,CAYhC,QChBY,GAAGb,QAAQ,CAACU,aAAT,CAAuB,aAAvB,CAAnB;AHDI,AEkBA,QFlBI1B,KAAJ,GAAY;AACV,AEkBF,ACjBJ6B,UAAU,CAACD,EHDE,KAAKpC,AGClB,GAAqB,EHDR,CAAWQ,GGCG,EHDrB;AACD,AEkBD,ACjBF,KHRe,CGQXH,MAAM,CAACL,KAAP,CAAaQ,KAAjB,EAAwB;ADkBtB,ACjBAH,IAAAA,MAAM,CAACW,MAAP;AHAA,AGCD,GAFD,KHCMR,CGCC,IHDL,CAAUC,KAAV,EAAiB;AACf,AEiBH,AChBCJ,IAAAA,CDlBY,KCkBN,CHDCL,AGCAe,IAAP,CHDE,CAAWP,KAAX,GAAmBC,KAAnB;AACD,AGCF;ADnBa,ACoBf,CAND,EAQA,iDDc2B,MAAM;AF7BhB,AE8Bb,GF9BF,SE8BQc,SAAS,GAAGC,QAAQ,CAACC,eAAT,KAA6B,SAA/C;AFhBF,OAAKvB,OAAL,CAAaQ,OAAb,CAAsBC,MAAD,IAAY;AAC/BA,AEiBA,ACfJ,IHFIA,AGEA,MHFM,AEiBFY,CFjBGX,GAAP,CAAWP,IEiBX,EFjBA,AEiBe,ECfIiC,SAAvB,EAAkC;AHD/B,AEiBG,ACfJA,EAAAA,CHJA,QGIS,CAACC,CDeDlC,MAAL,CAAYC,IAAZ,CCfJ,CAAwBkC,QAAxB,CAAiC,sCAAjC,EAA2CC,KAA3C,CAAkDC,KAAD,IAAW;AHD7D,AEiBI,ACfDC,CHpBJ,GGoBIA,GDaA,ICbO,CAACC,CDeD,ECfP,CAAYF,KAAZ;ADgBE,ACfH,GAFD,UDiBSrC,MAAL,CAAYE,KAAZ;AFhBNT,AEiBK,ACfJ,WHFU,CAACM,SAAZ,CAAsBE,IAAtB,GAA6B,YAAY;AACvC,AEiBC,KA5Ca,EF2BTN,KAAL,CAAWM,IAAX;AACD,CAFD;AEzBI,SAAKoB,SAAL,GAAiB,GAAjB,CADY,CAEZ;AF4BJ5B,AE3BG,WF2BQ,CAACM,SAAZ,CAAsBG,KAAtB,GAA8B,YAAY;AACxC,OAAKP,KAAL,CAAWO,KAAX;AACD,AE3BCK,CFyBF,CEzBEA,GAAG,CAACP,MAAD,EAAS;AACV,SAAKA,MAAL,GAAcA,MAAd;AF4BJP,AE3BI,UAAM6B,CF2BC,CAACvB,ME3BM,GF2BlB,AE3BqB,CF2BCS,GE3BGe,OF2BzB,GAAmC,UE3Bd,CAAyB,CF2BC,IE3BIC,kBAA9B,EAAkD;AF4BrE,AE3BIH,MAAAA,CF2BC1B,KAAL,CAAWc,EE3BE,EAAE,EF2Bf,GAAoB,AE3BAY,KF2BK1B,KAAL,CAAWM,IAAX,EAApB,GAAwC,KAAKN,KAAL,CAAWO,KAAX,EAAxC;AACD,AE7BsE,CF2BvE,IE3BqB,CAAjB;AAIAoB,IAAAA,QAAQ,CAACG,OAAT,CAAiB,KAAKzB,MAAL,CAAYL,KAA7B;AF2BJF,AEzBI0B,IAAAA,OFyBO,CAACpB,AEzBA,CAAC2B,QFyBb,CAAsBhB,IAAtB,GAA6B,AEzBzB,CAA0B,WFyBW,OEzBrC,EAA8C,KAAKiB,sBAAnD;AF0BF,AEzBC,GAfa,CAiBd,GFuBKhC,KAAL,CAAWQ,KAAX,GAAmB,IAAnB;AACD,CAFD;;AAIAV,AE3CgB,WF2CL,CAACM,SAAZ,CAAsBY,MAAtB,GAA+B,YAAY;AACzC,OAAKhB,KAAL,CAAWQ,KAAX,GAAmB,KAAnB;AACD,CAFD,EAIA,YECeU;AFAf;AACA;;;eAEepB","file":"assets.8f4429fc.js","sourceRoot":"..","sourcesContent":["function MediaPlayer(config) {\r\n  this.media = config.el;\r\n  this.plugins = config.plugins || [];\r\n\r\n  this._initPlugins();\r\n}\r\n\r\nMediaPlayer.prototype._initPlugins = function () {\r\n  const player = {\r\n    play: () => this.play(),\r\n    pause: () => this.pause(),\r\n    media: this.media,\r\n\r\n    get muted() {\r\n      return this.media.muted;\r\n    },\r\n\r\n    set muted(value) {\r\n      this.media.muted = value;\r\n    },\r\n  };\r\n\r\n  this.plugins.forEach((plugin) => {\r\n    plugin.run(player);\r\n  });\r\n};\r\n\r\nMediaPlayer.prototype.play = function () {\r\n  this.media.play();\r\n};\r\n\r\nMediaPlayer.prototype.pause = function () {\r\n  this.media.pause();\r\n};\r\n\r\nMediaPlayer.prototype.togglePlay = function () {\r\n  this.media.paused ? this.media.play() : this.media.pause();\r\n};\r\n\r\nMediaPlayer.prototype.mute = function () {\r\n  this.media.muted = true;\r\n};\r\n\r\nMediaPlayer.prototype.unmute = function () {\r\n  this.media.muted = false;\r\n};\r\n\r\n// MediaPlayer.prototype.toggleMute = function () {\r\n//   this.media.muted = !this.media.muted;\r\n// };\r\n\r\nexport default MediaPlayer;\r\n","function AutoPlay() {}\r\n\r\nAutoPlay.prototype.run = function (player) {\r\n  if (!player.muted) {\r\n    player.muted = true;\r\n  }\r\n  player.play();\r\n};\r\n\r\nexport default AutoPlay;\r\n","class AutoPause {\r\n  constructor() {\r\n    this.threshold = 0.3;\r\n    // this.handleIntersection = this.handleIntersection.bind(this);\r\n  }\r\n\r\n  run(player) {\r\n    this.player = player;\r\n    const observer = new IntersectionObserver(this.handleIntersection, {\r\n      threshold: this.threshold,\r\n    });\r\n\r\n    observer.observe(this.player.media);\r\n\r\n    document.addEventListener(\"visibilitychange\", this.handleVisibilityChange);\r\n  }\r\n\r\n  // Si uso las Arrow Functions no necesito bindear en el constructor el this.handleIntersection.\r\n  handleIntersection = (entries) => {\r\n    const entry = entries[0];\r\n\r\n    // const isVisible = entry.intersectionRatio >= this.threshold; --> a pata\r\n\r\n    if (entry.isIntersecting) {\r\n      // --> con un elemento del entry\r\n      this.player.play();\r\n    } else {\r\n      this.player.pause();\r\n    }\r\n\r\n    // if (isVisible) {\r\n    //   this.player.play();\r\n    // } else {\r\n    //   this.player.pause();\r\n    // }\r\n  };\r\n\r\n  handleVisibilityChange = () => {\r\n    const isVisible = document.visibilityState === \"visible\";\r\n\r\n    if (isVisible) {\r\n      this.player.play();\r\n    } else {\r\n      this.player.pause();\r\n    }\r\n  };\r\n}\r\n\r\nexport default AutoPause;\r\n","import MediaPlayer from \"./MediaPlayer.js\";\r\nimport AutoPlay from \"./Pluggins/AutoPlay.js\";\r\nimport AutoPause from \"./Pluggins/AutoPause.js\";\r\n\r\nconst video = document.querySelector(\"video\");\r\n\r\nconst player = new MediaPlayer({\r\n  el: video,\r\n  plugins: [new AutoPlay(), new AutoPause()],\r\n});\r\n\r\nconst playButton = document.querySelector(\"#playButton\");\r\nplayButton.onclick = () => player.togglePlay();\r\n\r\nconst muteButton = document.querySelector(\"#muteButton\");\r\nmuteButton.onclick = () => {\r\n  if (player.media.muted) {\r\n    player.unmute();\r\n  } else {\r\n    player.mute();\r\n  }\r\n};\r\n\r\n// muteButton.onclick = () => player.toggleMute();\r\n\r\nif (\"serviceWorker\" in navigator) {\r\n  navigator.serviceWorker.register(\"/sw.js\").catch((error) => {\r\n    console.log(error);\r\n  });\r\n}\r\n"]}